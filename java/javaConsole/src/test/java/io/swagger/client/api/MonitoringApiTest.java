/**
 * Developer API
 * Documentation of worker endpoints
 *
 * OpenAPI spec version: 2.1
 * Contact: info@nviso.ch
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ResponseServer;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MonitoringApi
 */
public class MonitoringApiTest {

    private final MonitoringApi api = new MonitoringApi();

    
    /**
     * Health of the workers
     *
     * Check the health of all the workers. If the IP Address and the port is given, it will only check the health of the given worker.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void healthTest() throws ApiException {
		MonitoringApi apiInstance = new MonitoringApi();
        String ipAddress = null; // String | IP Address of the server where the worker is.
        String port = null; // String | Port to the Rest API.
        String appId = "appId_example"; // String | Application ID. Used for the authentication
        String appKey = "appKey_example"; // String | Application key. Used for the authentication
        try {
            ResponseServer result = apiInstance.health(ipAddress, port, appId, appKey);
            System.out.println(result);
        } catch (ApiException e) {
            System.err.println("Exception when calling MonitoringApi#health");
            e.printStackTrace();
        }
    }
    
}
